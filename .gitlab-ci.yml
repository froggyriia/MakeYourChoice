variables:
  DOCKER_TLS_CERTDIR: "/certs"
  APP: "my-app"
  TRIVY_CACHE_DIR: ".trivycache"

stages:
  - build
  - test

build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" "$HARBOR_HOST" --password-stdin
  script:
    - docker build -t $APP .
    - docker tag $APP $HARBOR_HOST/$HARBOR_PROJECT/$APP:$CI_COMMIT_SHORT_SHA
    - docker tag $APP $HARBOR_HOST/$HARBOR_PROJECT/$APP:latest
    - docker push $HARBOR_HOST/$HARBOR_PROJECT/$APP:$CI_COMMIT_SHORT_SHA
    - docker push $HARBOR_HOST/$HARBOR_PROJECT/$APP:latest
  tags:
    - docker

container_scanning:
  stage: test
  image:
    name: $HARBOR_HOST/docker-hub-cache/aquasec/trivy:latest
    entrypoint: [""]
  variables:
    FULL_IMAGE_NAME: $HARBOR_HOST/$HARBOR_PROJECT/$APP:latest
  before_script:
    - trivy --version
    - trivy clean --scan-cache
    - trivy image --download-db-only --cache-dir $TRIVY_CACHE_DIR
  script:
    - trivy image \
        --cache-dir $TRIVY_CACHE_DIR \
        --no-progress \
        --severity HIGH,CRITICAL \
        --exit-code 1 \
        --format template \
        --template "@/contrib/gitlab.tpl" \
        --output "gl-container-scanning-report.json" \
        $FULL_IMAGE_NAME
  cache:
    paths:
      - $TRIVY_CACHE_DIR
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json
    paths:
      - gl-container-scanning-report.json
  tags:
    - docker
  needs:
    - build